/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.cotizacion;

import clase.ListadoCotizacion;
import control.CotizacionDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alfredo
 */
public class menuAgregarItemCotizacion extends javax.swing.JFrame {

    /**
     * Creates new form menuAgregarItemCotizacion
     */
    public menuAgregarItemCotizacion() {
        this.setTitle("Ventana Agregar Item a Cotizacion");
        initComponents();
        this.txt_descripcion.setLineWrap(true);
    }

    public void eliminarContenidoTabla() {
        DefaultTableModel tb = (DefaultTableModel) vista.cotizacion.menuCotizacion.tablaCotizacion.getModel();
        int a = vista.cotizacion.menuCotizacion.tablaCotizacion.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
    }

    public void cargarTablaInicio() {
        try {
            CotizacionDao cotix = new CotizacionDao();
            int idCotizacion = Integer.parseInt(this.txt_idCotizacion.getText());
            if (cotix.validarSiExiste(idCotizacion)) {
                DefaultTableModel modelo = (DefaultTableModel) vista.cotizacion.menuCotizacion.tablaCotizacion.getModel();
                ArrayList<ListadoCotizacion> listado = cotix.listadoCotizacion(idCotizacion);

                Object[] fila = new Object[modelo.getColumnCount()];
                for (int i = 0; i < listado.size(); i++) {
                    fila[0] = listado.get(i).getIdCotizacion();
                    fila[1] = listado.get(i).getDescripcion();
                    fila[2] = listado.get(i).getCantidad();
                    fila[3] = listado.get(i).getPrecioUnitario();
                    fila[4] = listado.get(i).getSubTotal();
                    modelo.addRow(fila);
                }

                //Actualizar el texto de subTotal
            } else {
                if (vista.cotizacion.menuCotizacion.tablaCotizacion.getRowCount() >= 0) {
                    this.eliminarContenidoTabla();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problema Tabla Proveedores: " + e.getMessage());
        }
    }

    public String cambiarFormatoMil(String valor) {
        String valorConSeparador = "";
        char[] arregloPaso = valor.toCharArray();
        int contadorPaso = 1;
        for (int i = arregloPaso.length - 1; i >= 0; i--) {
            if (contadorPaso == 3) {
                if (i == 0) {
                    valorConSeparador = valorConSeparador + arregloPaso[i];
                    contadorPaso = 1;
                } else {
                    valorConSeparador = valorConSeparador + arregloPaso[i] + ".";
                    contadorPaso = 1;
                }

            } else {
                valorConSeparador = valorConSeparador + arregloPaso[i];
                contadorPaso = contadorPaso + 1;
            }
            //System.out.println("LETRA: " + arregloPaso[i]);
        }

        StringBuilder stringPaso = new StringBuilder(valorConSeparador);
        valorConSeparador = stringPaso.reverse().toString();

        return valorConSeparador;
    }

    public void actualizarTotalCampoyBD(int idCotizacion) {
        CotizacionDao cotix = new CotizacionDao();
        if (cotix.validarSiExiste(idCotizacion)) {
            //Existe entonces rescato
            //REscato el total final de la lista
            long subTotal = cotix.devolverValorTotalListadoCotizacion(idCotizacion);
            //Necesito actualizar la tabla y el texto con ese total
            if (cotix.actualizarTotalCotizacion(idCotizacion, subTotal)) {
                JOptionPane.showMessageDialog(null, "Total Actualizado Correctamente");
                //Modificar Campo TOTAL
                vista.cotizacion.menuCotizacion.txt_totalCotizacion.setText(this.cambiarFormatoMil(String.valueOf(subTotal)));
            }
            System.out.println("VALOR TOTAL: " + subTotal);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_descripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txt_valorITem = new javax.swing.JTextField();
        btnAgregarItem = new javax.swing.JButton();
        txt_idCotizacion = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_precioUnitario = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ID Cotizacion:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Descripcion Item :");

        txt_descripcion.setColumns(20);
        txt_descripcion.setRows(5);
        jScrollPane1.setViewportView(txt_descripcion);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Valor ITEM:");

        txt_valorITem.setText("0");

        btnAgregarItem.setText("AGREGAR");
        btnAgregarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarItemActionPerformed(evt);
            }
        });

        txt_idCotizacion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_idCotizacion.setText("0000");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Precio Unitario");

        txt_precioUnitario.setText("0");
        txt_precioUnitario.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_precioUnitarioCaretUpdate(evt);
            }
        });
        txt_precioUnitario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_precioUnitarioMouseClicked(evt);
            }
        });

        txt_cantidad.setText("0");
        txt_cantidad.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_cantidadCaretUpdate(evt);
            }
        });
        txt_cantidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_cantidadMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Cantidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_precioUnitario)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(265, 265, 265))
                    .addComponent(txt_cantidad)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(36, 36, 36)
                                .addComponent(txt_idCotizacion)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_valorITem)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_idCotizacion))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_precioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_valorITem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnAgregarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarItemActionPerformed
        try {
            if (this.txt_descripcion.getText().isEmpty()) {
                throw new Exception("EL CAMPO DESCRIPCION NO PUEDE VENIR VACIO");
            }
            if (this.txt_valorITem.getText().isEmpty()) {
                throw new Exception("INGRESE UN VALOR");
            }
            
            if (this.txt_cantidad.getText().isEmpty()) {
                throw new Exception("INGRESE UNA CANTIDAD");
            }
            
            if(this.txt_precioUnitario.getText().isEmpty()){
                throw new Exception("INGRESE UN PRECIO UNITARIO");
            }
            
            //Dar formato
            String descripcion = this.txt_descripcion.getText();
            long subTotal = Long.parseLong(this.txt_valorITem.getText().replace(".", ""));
            int idCotizacion = Integer.parseInt(vista.cotizacion.menuAgregarItemCotizacion.txt_idCotizacion.getText());
            
            int cantidad = Integer.parseInt(this.txt_cantidad.getText().replace(".", ""));
            long precioUnitario = Long.parseLong(this.txt_precioUnitario.getText().replace(".", ""));
            
            
            //Crear item:
            CotizacionDao cotix = new CotizacionDao();
            if (cotix.insertarListadoCotizacion(descripcion,cantidad,precioUnitario,subTotal, idCotizacion)) {
                JOptionPane.showMessageDialog(null, "ITEM AGREGADO");
                this.eliminarContenidoTabla();
                this.cargarTablaInicio();
                this.actualizarTotalCampoyBD(idCotizacion);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Error no se pudo agregar");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarItemActionPerformed

    private void txt_cantidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_cantidadMouseClicked
        
    }//GEN-LAST:event_txt_cantidadMouseClicked

    private void txt_precioUnitarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_precioUnitarioMouseClicked
       
    }//GEN-LAST:event_txt_precioUnitarioMouseClicked

    private void txt_cantidadCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_cantidadCaretUpdate
        try {
            //Calcular valor item
            int cantidad = 0;
            long precioUnitario = 0;
            if (!this.txt_cantidad.getText().isEmpty()) {
                cantidad = Integer.parseInt(this.txt_cantidad.getText().replace(".", ""));
            }

            if (!this.txt_precioUnitario.getText().isEmpty()) {
                precioUnitario = Long.parseLong(this.txt_precioUnitario.getText().replace(".", ""));
            }

            long total = cantidad * precioUnitario;
            System.out.println("VALOR: " + total);
            this.txt_valorITem.setText(this.cambiarFormatoMil(String.valueOf(total)));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txt_cantidadCaretUpdate

    private void txt_precioUnitarioCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_precioUnitarioCaretUpdate
        try {
            //Calcular valor item
            int cantidad = 0;
            long precioUnitario = 0;
            if (!this.txt_cantidad.getText().isEmpty()) {
                cantidad = Integer.parseInt(this.txt_cantidad.getText().replace(".", ""));
            }

            if (!this.txt_precioUnitario.getText().isEmpty()) {
                precioUnitario = Long.parseLong(this.txt_precioUnitario.getText().replace(".", ""));
            }

            long total = cantidad * precioUnitario;

            this.txt_valorITem.setText(this.cambiarFormatoMil(String.valueOf(total)));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txt_precioUnitarioCaretUpdate

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(menuAgregarItemCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(menuAgregarItemCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(menuAgregarItemCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(menuAgregarItemCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new menuAgregarItemCotizacion().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextArea txt_descripcion;
    public static javax.swing.JLabel txt_idCotizacion;
    private javax.swing.JTextField txt_precioUnitario;
    private javax.swing.JTextField txt_valorITem;
    // End of variables declaration//GEN-END:variables
}
