/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.exportarOrden;

import clase.ExportarOT;
import clase.ListadoPedido;
import clase.ListadoTrabajosRealizadosExportOT;
import clase.Pedido;
import control.ExportarOTDAO;
import control.ListadoPedidoDao;
import control.OrdenTrabajoDao;
import control.PedidoDao;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * @author Alfredo
 */
public class menuExportarOrden extends javax.swing.JFrame {

    /**
     * Creates new form menuExportarOrden
     */
    public menuExportarOrden() {
        this.setTitle("Ventana Gestión Exportación Orden de Trabajo");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_nroOT = new javax.swing.JTextField();
        btnConsultarOT = new javax.swing.JButton();
        btnExportarNroOT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nro° Orden de Trabajo: ");

        btnConsultarOT.setText("?");
        btnConsultarOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarOTActionPerformed(evt);
            }
        });

        btnExportarNroOT.setText("EXPORTAR");
        btnExportarNroOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarNroOTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_nroOT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultarOT))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(btnExportarNroOT, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultarOT, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_nroOT, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnExportarNroOT, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarOTActionPerformed
        vista.exportarOrden.menuConsultarOTTrabajosRealizados menu = new vista.exportarOrden.menuConsultarOTTrabajosRealizados();
        menu.setVisible(true);
    }//GEN-LAST:event_btnConsultarOTActionPerformed

    private void btnExportarNroOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarNroOTActionPerformed
        try {
            if (vista.exportarOrden.menuExportarOrden.txt_nroOT.getText().isEmpty()) {
                throw new Exception("Para utilizar esta funcion, ingrese el Nro° de Orden de Trabajo");
            }

            int nroOT = Integer.parseInt(vista.exportarOrden.menuExportarOrden.txt_nroOT.getText());
            
            OrdenTrabajoDao ot = new OrdenTrabajoDao();
            if (!ot.validarSiExiste(nroOT)) {
                throw new Exception("No existe el número de Orden Trabajo");
            }
            
            String nombreUsuario = System.getProperty("user.name");

            Calendar today = Calendar.getInstance();
            Date fechaHoy = today.getTime();
            SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
            String fechaStringBase = format.format(fechaHoy);

            String nuevaCarpeta = "FECHA-" + fechaStringBase;
            //Crear directorio y comprobar si existe        
            File file = new File("C:/Users/" + nombreUsuario + "/Desktop/ORDENTRABAJO/" + nuevaCarpeta);
            if (!file.exists()) {
                if (file.mkdir()) {
                    System.out.println("Directory is created!");
                }
            }

            ExportarOTDAO exportar = new ExportarOTDAO();

            //Rescatar cabecera 
            ExportarOT ordenTrabajo = exportar.rescatarCabeceraExport(nroOT);

            InputStream ExcelFileToRead = new FileInputStream("C:/FORMATOS/FORMATOORDENTRABAJO.xls");
            // OPCPackage pkg = OPCPackage.open(new File("C:/Users/Alfredo/Desktop/PEDIDOS/FORMATO.xlsx"));
            HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead);
            //XSSFWorkbook wb = new XSSFWorkbook(pkg);
            String nombreHoja = wb.getSheetName(0);
            //HSSFSheet hoja = wb.getSheet(nombreHoja);
            HSSFSheet hoja = wb.getSheetAt(0);
            System.out.println("HOJA EXCEL: " + hoja);

            HSSFRow row = hoja.createRow(0);
            HSSFCell cell = row.createCell(1);
            //Nombre empresa
            cell.setCellValue(ordenTrabajo.getNombreEmpresa());
            //Giro
            row = hoja.createRow(1);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getGiroEmpresa());
            //RUT
            row = hoja.createRow(2);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getRutEmpresa());
            //Nro Telefono
            row = hoja.createRow(3);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getNroEmpresa());
            //Direccion
            row = hoja.createRow(4);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getDireccion());
            //NOMBRE CONTACTO
            row = hoja.createRow(5);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getNombreContacto());
            //Nro Contcto
            row = hoja.createRow(6);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getNroContacto());
            //NOMBRE OT
            row = hoja.createRow(7);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getNombreOT());
            //NRO ORDEN
            row = hoja.createRow(8);
            cell = row.createCell(1);
            cell.setCellValue(nroOT);
            //NOMBRE RESPONSABLE
            row = hoja.createRow(9);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getNombreResponsable());
            //FECHA INICIO
            row = hoja.createRow(10);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getFechaInicio());
            //FECHA Termino
            row = hoja.createRow(11);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getFechaTermino());
            //FACTURAS
            row = hoja.createRow(12);
            cell = row.createCell(1);
            String facturas = ordenTrabajo.getNroFactura1() + " / " + ordenTrabajo.getNroFactura2() + " / " + ordenTrabajo.getNroFactura3() + " / " + ordenTrabajo.getNroFactura4() + " / " + ordenTrabajo.getNroFactura5();
            cell.setCellValue(facturas);
            //NRO OC
            row = hoja.createRow(13);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getNroOrdenCompra());
            //Descripcion
            row = hoja.createRow(14);
            cell = row.createCell(1);
            cell.setCellValue(ordenTrabajo.getDescripcionOT());
            //Total pedido
            row = hoja.createRow(15);
            cell = row.createCell(1);
            cell.setCellValue(exportar.rescatarTotalDatosPedidoPorNroOT(nroOT));
            //Total insumo
            row = hoja.createRow(16);
            cell = row.createCell(1);
            cell.setCellValue(exportar.rescatarTotalDatosInsumoPorNroOT(nroOT));
            //Total trabajos
            row = hoja.createRow(17);
            cell = row.createCell(1);
            cell.setCellValue(exportar.rescatarTotalDatosTrabajosPorNroOT(nroOT));
            //Recorrer listado
            //Empiezo desde la fila de 16 y recorro 4 columnas
            ArrayList<ListadoPedido> listadoRecorrer = exportar.rescatarDatosPedido(nroOT);
            int filaInicial = 20;
            int columnaRecorre = 0;
            /*Seleccionar fila inicial*/
            for (int i = 0; i < listadoRecorrer.size(); i++) {
                row = hoja.createRow(filaInicial++);
                for (int j = 0; j <= 2; j++) {
                    cell = row.createCell(j);
                    if (j == 0) {
                        //Primera columna
                        cell.setCellValue(listadoRecorrer.get(i).getNombre());
                    } else if (j == 1) {
                        cell.setCellValue(listadoRecorrer.get(i).getCantidad());
                    } else if (j == 2) {
                        cell.setCellValue(listadoRecorrer.get(i).getSubTotal());
                    }
                }
            }
            //Cambio de hoja
            hoja = wb.getSheetAt(1);
            filaInicial = 2;
            columnaRecorre = 3;
            /*Seleccionar fila inicial*/
            ArrayList<ListadoPedido> listadoInsumos = exportar.rescatarDatosInsumos(nroOT);
            for (int i = 0; i < listadoInsumos.size(); i++) {
                row = hoja.createRow(filaInicial++);
                for (int j = 0; j <= 2; j++) {
                    cell = row.createCell(j);
                    if (j == 0) {
                        //Primera columna
                        cell.setCellValue(listadoInsumos.get(i).getNombre());
                    } else if (j == 1) {
                        cell.setCellValue(listadoInsumos.get(i).getCantidad());
                    } else if (j == 2) {
                        cell.setCellValue(listadoInsumos.get(i).getSubTotal());
                    }
                }
            }

            hoja = wb.getSheetAt(2);
            filaInicial = 2;
            columnaRecorre = 3;
            /*Seleccionar fila inicial*/
            ArrayList<ListadoTrabajosRealizadosExportOT> listadoTrabajos = exportar.rescatarDatosTrabajosRealizado(nroOT);
            for (int i = 0; i < listadoTrabajos.size(); i++) {
                row = hoja.createRow(filaInicial++);
                for (int j = 0; j <= 4; j++) {
                    cell = row.createCell(j);
                    if (j == 0) {
                        //Primera columna
                        cell.setCellValue(listadoTrabajos.get(i).getNombreDepto());
                    } else if (j == 1) {
                        cell.setCellValue(listadoTrabajos.get(i).getNombreTrabajo());
                    } else if (j == 2) {
                        cell.setCellValue(listadoTrabajos.get(i).getHorasTrabajadas());
                    } else if (j == 3) {
                        cell.setCellValue(listadoTrabajos.get(i).getValorHora());
                    } else if (j == 4) {
                        cell.setCellValue(listadoTrabajos.get(i).getSubTotal());
                    } 
                }
            }

            String rutaNueva = "C:/Users/" + nombreUsuario + "/Desktop/ORDENTRABAJO/" + nuevaCarpeta + "/NRO OT -" + nroOT + ".xls";
            FileOutputStream fileOut = new FileOutputStream(rutaNueva);
            wb.write(fileOut);
            fileOut.flush();
            fileOut.close();
            JOptionPane.showMessageDialog(null, "Exportado correctamente \n" + rutaNueva);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnExportarNroOTActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(menuExportarOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(menuExportarOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(menuExportarOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(menuExportarOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new menuExportarOrden().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultarOT;
    private javax.swing.JButton btnExportarNroOT;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JTextField txt_nroOT;
    // End of variables declaration//GEN-END:variables
}
