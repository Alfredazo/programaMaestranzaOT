/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.insumos;

import clase.ListadoInsumos;
import control.InsumoDao;
import control.ProductoDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alfredo
 */
public class menuInsumo extends javax.swing.JFrame {

    /**
     * Creates new form menuInsumo
     */
    public menuInsumo() {
        this.setTitle("Ventana Gestion Insumos");
        initComponents();
        this.obtenerUltimoIdInsumo();
    }
    
    public void obtenerUltimoIdInsumo() {
        if (this.txt_idInsumos.getText().equals("00000")) {
            InsumoDao insumox = new InsumoDao();
            int idCotizacion = insumox.obtenerUltimoNroInsumo() + 1;
            this.txt_idInsumos.setText(String.valueOf(idCotizacion));
        }
    }
    
    public void eliminarContenidoTabla() {
        DefaultTableModel tb = (DefaultTableModel) this.tablaInsumos.getModel();
        int a = this.tablaInsumos.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
    }
    
    public void cargarTablaInicio() {
        try {
            InsumoDao insumox = new InsumoDao();
            
            DefaultTableModel modelo = (DefaultTableModel) this.tablaInsumos.getModel();
            int idInsumo = Integer.parseInt(vista.insumos.menuInsumo.txt_idInsumos.getText());
            ArrayList<ListadoInsumos> listado = insumox.listadoItemsInsumo(idInsumo);
            
            Object[] fila = new Object[modelo.getColumnCount()];
            for (int i = 0; i < listado.size(); i++) {
                fila[0] = listado.get(i).getIdListadoInsumos();
                fila[1] = listado.get(i).getNombreProducto();
                fila[2] = listado.get(i).getFechaCreacion();
                fila[3] = listado.get(i).getCantidad();
                fila[4] = listado.get(i).getPrecioUnitario();
                fila[5] = listado.get(i).getSubTotal();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problema Tabla Proveedores: " + e.getMessage());
        }
    }
    
    public void actualizarTotalCampoyBD(int idInsumo) {
        InsumoDao insumox = new InsumoDao();
        if (insumox.validarQueExistaInsumo(idInsumo)) {
            //Existe entonces rescato
            //REscato el total final de la lista
            long subTotal = insumox.devolverValorTotalListadoInsumo(idInsumo);

            //Necesito actualizar la tabla y el texto con ese total
            if (insumox.modificarSubTotalInsumo(subTotal, idInsumo)) {
                JOptionPane.showMessageDialog(null, "Total Actualizado Correctamente");
                //Modificar Campo TOTAL
                vista.insumos.menuInsumo.txt_totalInsumos.setText(this.cambiarFormatoMil(String.valueOf(subTotal)));
            }
            System.out.println("VALOR TOTAL: " + subTotal);
        }
    }
    
    public String cambiarFormatoMil(String valor) {
        String valorConSeparador = "";
        char[] arregloPaso = valor.toCharArray();
        int contadorPaso = 1;
        for (int i = arregloPaso.length - 1; i >= 0; i--) {
            if (contadorPaso == 3) {
                if (i == 0) {
                    valorConSeparador = valorConSeparador + arregloPaso[i];
                    contadorPaso = 1;
                } else {
                    valorConSeparador = valorConSeparador + arregloPaso[i] + ".";
                    contadorPaso = 1;
                }
                
            } else {
                valorConSeparador = valorConSeparador + arregloPaso[i];
                contadorPaso = contadorPaso + 1;
            }
            //System.out.println("LETRA: " + arregloPaso[i]);
        }
        
        StringBuilder stringPaso = new StringBuilder(valorConSeparador);
        valorConSeparador = stringPaso.reverse().toString();
        
        return valorConSeparador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_idInsumos = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_nroOT = new javax.swing.JTextField();
        btnBuscarOT = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInsumos = new javax.swing.JTable();
        btnAgregarITEM = new javax.swing.JButton();
        btnEliminarITEM = new javax.swing.JButton();
        txt_totalInsumos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnActualizarITEMS = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ID Insumo:");

        txt_idInsumos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_idInsumos.setText("00000");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("NroÂ° Orden Trabajo:");

        btnBuscarOT.setText("?");
        btnBuscarOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarOTActionPerformed(evt);
            }
        });

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tablaInsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PRODUCTO", "FECHA", "CANTIDAD", "P/U", "SUB TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaInsumos.getTableHeader().setReorderingAllowed(false);
        tablaInsumos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaInsumosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaInsumos);

        btnAgregarITEM.setText("AGREGAR");
        btnAgregarITEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarITEMActionPerformed(evt);
            }
        });

        btnEliminarITEM.setText("ELIMINAR");
        btnEliminarITEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarITEMActionPerformed(evt);
            }
        });

        txt_totalInsumos.setText("0");
        txt_totalInsumos.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("TOTAL:");

        btnActualizarITEMS.setText("ACTUALIZAR");
        btnActualizarITEMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarITEMSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(txt_idInsumos)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txt_nroOT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarOT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_totalInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarITEM, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(btnEliminarITEM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnActualizarITEMS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificar)
                            .addComponent(btnLimpiar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_idInsumos)
                            .addComponent(jLabel3)
                            .addComponent(txt_nroOT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarOT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregarITEM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarITEM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarITEMS, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_totalInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarOTActionPerformed
        try {
            vista.insumos.menuConsultarOTInsumos menu = new vista.insumos.menuConsultarOTInsumos();
            menu.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarOTActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            if (vista.insumos.menuInsumo.txt_nroOT.getText().isEmpty()) {
                throw new Exception("Ingrese Numero de Orden de trabajo");
            }
            int nroOT = Integer.parseInt(vista.insumos.menuInsumo.txt_nroOT.getText());
            int idInsumo = Integer.parseInt(this.txt_idInsumos.getText());
            
            InsumoDao insumox = new InsumoDao();
            //Validar que no exista 
            if (!insumox.validarQueNoExistaOTInsumo(nroOT)) {
                if (insumox.insertarInsumo(nroOT)) {
                    JOptionPane.showMessageDialog(null, "Agregado Correctamente");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Agregar");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ya existe un Registro de insumos para el nÃºmero de OT; " + nroOT);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    public void limpiarCampos() {
        this.txt_idInsumos.setText("00000");
        this.obtenerUltimoIdInsumo();
        vista.insumos.menuInsumo.txt_nroOT.setText("");
        vista.insumos.menuInsumo.txt_totalInsumos.setText("0");
        //Actualizar tabla
        this.eliminarContenidoTabla();
    }

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            if (vista.insumos.menuInsumo.txt_nroOT.getText().isEmpty()) {
                throw new Exception("Ingrese Numero de Orden de trabajo");
            }
            int nroOT = Integer.parseInt(vista.insumos.menuInsumo.txt_nroOT.getText());
            int idInsumo = Integer.parseInt(this.txt_idInsumos.getText());
            
            InsumoDao insumox = new InsumoDao();
            //Validar que no exista 
            if (insumox.validarQueNoExistaOTInsumo(nroOT)) {
                //Metodo Modificar
                if (insumox.modificarInsumo(nroOT, idInsumo)) {
                    JOptionPane.showMessageDialog(null, "Modificado Correctamente");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Modificar");
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Ya existe un Registro de insumos para el nÃºmero de OT; " + nroOT);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnAgregarITEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarITEMActionPerformed
        try {
            InsumoDao insumox = new InsumoDao();
            int idInsumo = Integer.parseInt(vista.insumos.menuInsumo.txt_idInsumos.getText());
            
            if (insumox.validarQueExistaInsumo(idInsumo)) {
                vista.insumos.agregarItemInsumo menu = new vista.insumos.agregarItemInsumo();
                menu.setVisible(true);
                
                vista.insumos.agregarItemInsumo.txt_idInsumo.setText(String.valueOf(idInsumo));
            } else {
                JOptionPane.showMessageDialog(null, "No existe el id de insumos, favor agregar primero.");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarITEMActionPerformed

    private void btnActualizarITEMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarITEMSActionPerformed
        try {
            if (this.tablaInsumos.getRowCount() >= 0) {
                this.eliminarContenidoTabla();
            }
            this.cargarTablaInicio();
            int idInsumo = Integer.parseInt(vista.insumos.menuInsumo.txt_idInsumos.getText());
            this.actualizarTotalCampoyBD(idInsumo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarITEMSActionPerformed

    private void btnEliminarITEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarITEMActionPerformed
        try {
            InsumoDao insumox = new InsumoDao();
            int idInsumo = Integer.parseInt(vista.insumos.menuInsumo.txt_idInsumos.getText());
            if (insumox.validarQueExistaInsumo(idInsumo)) {
                if (vista.insumos.menuInsumo.tablaInsumos.getSelectedRow() < 0) {
                    throw new Exception("Seleccione una fila a eliminar");
                }
                int confirmacion = JOptionPane.YES_NO_OPTION;
                int numeroConfirmacion = JOptionPane.showConfirmDialog(null, "Â¿Desea Eliminarlo Realmente?", "Warning", confirmacion);
                if (numeroConfirmacion == 0) {
                    //Metodo Eliminar
                    int idListadoSeleccionado = Integer.parseInt(vista.insumos.menuInsumo.tablaInsumos.getValueAt(vista.insumos.menuInsumo.tablaInsumos.getSelectedRow(), 0).toString());
                    if (insumox.eliminarITEMListado(idListadoSeleccionado)) {
                        JOptionPane.showMessageDialog(null, "Eliminado Correctamente");
                        this.eliminarContenidoTabla();
                        this.cargarTablaInicio();
                        this.actualizarTotalCampoyBD(idInsumo);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "No existe el ID insumo, favor agregar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarITEMActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            InsumoDao insumox = new InsumoDao();
            int idInsumo = Integer.parseInt(vista.insumos.menuInsumo.txt_idInsumos.getText());
            if (insumox.validarQueExistaInsumo(idInsumo)) {
                int confirmacion = JOptionPane.YES_NO_OPTION;
                int numeroConfirmacion = JOptionPane.showConfirmDialog(null, "Â¿Desea Eliminarlo Realmente?", "Warning", confirmacion);
                if (numeroConfirmacion == 0) {
                    if (insumox.eliminarInsumo(idInsumo)) {
                        JOptionPane.showMessageDialog(null, "Eliminado correctamente");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo eliminar");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No existe el id de Insumo");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tablaInsumosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaInsumosMouseClicked
        try {
            if (evt.getClickCount() == 2) {
                int idListadoSeleccionado = Integer.parseInt(vista.insumos.menuInsumo.tablaInsumos.getValueAt(vista.insumos.menuInsumo.tablaInsumos.getSelectedRow(), 0).toString());
                int idInsumo = Integer.parseInt(vista.insumos.menuInsumo.txt_idInsumos.getText());
                InsumoDao insumox = new InsumoDao();
                //Rescatar objeto por id
                ListadoInsumos listadoInsumox = insumox.objetoItemsInsumo(idListadoSeleccionado);
                vista.insumos.modificarItemInsumo menu = new vista.insumos.modificarItemInsumo();
                menu.setVisible(true);
                
                vista.insumos.modificarItemInsumo.txt_idInsumo.setText(String.valueOf(idInsumo));
                vista.insumos.modificarItemInsumo.txt_idListadoCotizacion.setText(String.valueOf(idListadoSeleccionado));
                vista.insumos.modificarItemInsumo.txt_fecha.setText(listadoInsumox.getFechaCreacion());
                //Obtener id de producto segun nombre
                ProductoDao productox = new ProductoDao();
                int idProducto = productox.obtenerIDProductoPorNombre(listadoInsumox.getNombreProducto().toUpperCase());
                vista.insumos.modificarItemInsumo.txt_codigoProducto.setText(String.valueOf(idProducto));
                vista.insumos.modificarItemInsumo.txt_cantidad.setText(this.cambiarFormatoMil(String.valueOf(listadoInsumox.getCantidad())));
                vista.insumos.modificarItemInsumo.txt_precioUnitario.setText(this.cambiarFormatoMil(String.valueOf(listadoInsumox.getPrecioUnitario())));
                vista.insumos.modificarItemInsumo.txt_subTotal.setText(this.cambiarFormatoMil(String.valueOf(listadoInsumox.getSubTotal())));
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_tablaInsumosMouseClicked

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(menuInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(menuInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(menuInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(menuInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new menuInsumo().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarITEMS;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarITEM;
    private javax.swing.JButton btnBuscarOT;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarITEM;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTable tablaInsumos;
    public static javax.swing.JLabel txt_idInsumos;
    public static javax.swing.JTextField txt_nroOT;
    public static javax.swing.JTextField txt_totalInsumos;
    // End of variables declaration//GEN-END:variables
}
