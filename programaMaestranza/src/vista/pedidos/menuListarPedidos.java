/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.pedidos;

import clase.ListadoCotizacion;
import clase.ListadoExportarCotizacion;
import clase.ListadoPedido;
import clase.Pedido;
import control.CotizacionDao;
import control.ListadoPedidoDao;
import control.PedidoDao;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * @author Alfredo
 */
public class menuListarPedidos extends javax.swing.JFrame {

    /**
     * Creates new form menuListarPedidos
     */
    public menuListarPedidos() {
        this.setTitle("Ventana Buscar Pedidos");
        initComponents();
        this.cargarListadoPedidos();
    }

    public String cambiarFormatoMil(String valor) {
        String valorConSeparador = "";
        char[] arregloPaso = valor.toCharArray();
        int contadorPaso = 1;
        for (int i = arregloPaso.length - 1; i >= 0; i--) {
            if (contadorPaso == 3) {
                if (i == 0) {
                    valorConSeparador = valorConSeparador + arregloPaso[i];
                    contadorPaso = 1;
                } else {
                    valorConSeparador = valorConSeparador + arregloPaso[i] + ".";
                    contadorPaso = 1;
                }

            } else {
                valorConSeparador = valorConSeparador + arregloPaso[i];
                contadorPaso = contadorPaso + 1;
            }
            //System.out.println("LETRA: " + arregloPaso[i]);
        }

        StringBuilder stringPaso = new StringBuilder(valorConSeparador);
        valorConSeparador = stringPaso.reverse().toString();

        return valorConSeparador;
    }

    public void eliminarContenidoTabla() {
        DefaultTableModel tb = (DefaultTableModel) this.tablaPedidos.getModel();
        int a = this.tablaPedidos.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
    }
    //Cargar tabla inicio (TODOS)

    public void cargarListadoPedidos() {
        try {
            PedidoDao pedidox = new PedidoDao();
            ArrayList<Pedido> listado = pedidox.listadoPedidos();

            DefaultTableModel modelo = (DefaultTableModel) this.tablaPedidos.getModel();

            Object[] fila = new Object[modelo.getColumnCount()];
            for (int i = 0; i < listado.size(); i++) {
                fila[0] = listado.get(i).getIdPedido();
                fila[1] = listado.get(i).getNumeroOT();
                fila[2] = listado.get(i).getFechaGeneracion();
                fila[3] = listado.get(i).getTipoUrgencia();
                fila[4] = listado.get(i).getEstadoPedido();
                fila[5] = listado.get(i).getNombreCompleto().toUpperCase();
                fila[6] = listado.get(i).getSubTotales();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            System.out.println("Listado Proveedores: " + e.getMessage());
        }
    }

    public void cargarListadoPedidos(String nombreBuscar) {
        try {
            PedidoDao pedidox = new PedidoDao();
            ArrayList<Pedido> listado = pedidox.listadoPedidosPorNombreSolicita(nombreBuscar);

            DefaultTableModel modelo = (DefaultTableModel) this.tablaPedidos.getModel();

            Object[] fila = new Object[modelo.getColumnCount()];
            for (int i = 0; i < listado.size(); i++) {
                fila[0] = listado.get(i).getIdPedido();
                fila[1] = listado.get(i).getNumeroOT();
                fila[2] = listado.get(i).getFechaGeneracion();
                fila[3] = listado.get(i).getTipoUrgencia();
                fila[4] = listado.get(i).getEstadoPedido();
                fila[5] = listado.get(i).getNombreCompleto().toUpperCase();
                fila[6] = listado.get(i).getSubTotales();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            System.out.println("Listado Proveedores: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_nombrePersonaSolicita = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedidos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nombre Persona Solicita:");

        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnExportar.setText("EXPORTAR");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txt_nombrePersonaSolicita, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(110, 110, 110)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombrePersonaSolicita, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buscar por nombre persona Solicita", jPanel1);

        tablaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NÂ° OT", "FECHA CREACION", "URGENCIA", "ESTADO", "SOLICITA", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPedidos.getTableHeader().setReorderingAllowed(false);
        tablaPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPedidos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPedidosMouseClicked
        try {
            if (evt.getClickCount() == 2) {
                int idPedido = Integer.parseInt(this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 0).toString());
                int numeroOT = Integer.parseInt(this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 1).toString());
                String fechaCreacion = this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 2).toString();
                String urgencia = this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 3).toString();
                String estado = this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 4).toString();
                String nombreSolicita = this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 5).toString();
                long total = Long.parseLong(this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 6).toString());

                //Enviar datos
                vista.pedidos.menuPedido menu = new vista.pedidos.menuPedido();
                menu.setVisible(true);

                vista.pedidos.menuPedido.txt_idPedido.setText(String.valueOf(idPedido));
                vista.pedidos.menuPedido.txt_nroOT.setText(String.valueOf(numeroOT));
                vista.pedidos.menuPedido.txt_personaSolicita.setText(nombreSolicita);
                vista.pedidos.menuPedido.txt_fechaCreacion.setText(fechaCreacion);
                vista.pedidos.menuPedido.cboEstado.setSelectedItem(estado);
                vista.pedidos.menuPedido.cboUrgencia.setSelectedItem(urgencia);
                vista.pedidos.menuPedido.txt_totalPedido.setText(this.cambiarFormatoMil(String.valueOf(total)));

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_tablaPedidosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        try {
            this.eliminarContenidoTabla();
            this.cargarListadoPedidos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        try {
            if (this.tablaPedidos.getSelectedRowCount() < 0) {
                throw new Exception("Seleccione una fila para utilizar esta funcion");
            }

            String nombreUsuario = System.getProperty("user.name");
            String fechaCreaciÃ³n = this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 2).toString();
            String nuevaCarpeta = "FECHA-" + fechaCreaciÃ³n;
            //Crear directorio y comprobar si existe
            File file = new File("C:/Users/" + nombreUsuario + "/Desktop/PEDIDOS/" + nuevaCarpeta);
            if (!file.exists()) {
                if (file.mkdir()) {
                    System.out.println("Directory is created!");
                }
            }

            InputStream ExcelFileToRead = new FileInputStream("C:/FORMATOS/FORMATOPEDIDO.xls");
            // OPCPackage pkg = OPCPackage.open(new File("C:/Users/Alfredo/Desktop/PEDIDOS/FORMATO.xlsx"));
            HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead);
            //XSSFWorkbook wb = new XSSFWorkbook(pkg);
            String nombreHoja = wb.getSheetName(0);
            //HSSFSheet hoja = wb.getSheet(nombreHoja);
            HSSFSheet hoja = wb.getSheetAt(0);
            System.out.println("HOJA EXCEL: " + hoja);
            PedidoDao pedidox = new PedidoDao();

            int idPedido = Integer.parseInt(this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 0).toString());
            int numeroOT = Integer.parseInt(this.tablaPedidos.getValueAt(this.tablaPedidos.getSelectedRow(), 1).toString());
            //Crear metodo de id y nroOT que devuelva el pedido
            Pedido pedido = pedidox.obtenerObjetoPedido(idPedido, numeroOT);

            HSSFRow row = hoja.createRow(0);
            HSSFCell cell = row.createCell(1);
            //Nro pedido
            cell.setCellValue(pedido.getIdPedido());
            //Fecha Generacion
            row = hoja.createRow(1);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getFechaGeneracion());
            //Numero OT
            row = hoja.createRow(2);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getNumeroOT());
            //Tipo Urgencia
            row = hoja.createRow(3);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getTipoUrgencia());
            //Tipo Estado
            row = hoja.createRow(4);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getEstadoPedido());
            //Tipo nombre persona
            row = hoja.createRow(5);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getNombreCompleto());
            //Tipo nombre cliente
            row = hoja.createRow(6);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getNombreCliente());
            //nombre ot
            row = hoja.createRow(7);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getNombreOT());
            //Total
            row = hoja.createRow(8);
            cell = row.createCell(1);
            cell.setCellValue(pedido.getSubTotales());

            //Recorrer listado
            //Empiezo desde la fila de 16 y recorro 4 columnas
            ListadoPedidoDao listadoDaox = new ListadoPedidoDao();
            ArrayList<ListadoPedido> listadoRecorrer = listadoDaox.listadoITEMPedidosListaCompleta(idPedido);
            int filaInicial = 10;
            int columnaRecorre = 0;
            /*Seleccionar fila inicial*/
            for (int i = 0; i < listadoRecorrer.size(); i++) {
                row = hoja.createRow(filaInicial++);
                for (int j = 0; j <= 3; j++) {
                    cell = row.createCell(j);
                    if (j == 0) {
                        //Primera columna
                        cell.setCellValue(listadoRecorrer.get(i).getCantidad());
                    } else if (j == 1) {
                        cell.setCellValue(listadoRecorrer.get(i).getNombre());
                    } else if (j == 2) {
                        cell.setCellValue(listadoRecorrer.get(i).getPrecioUnitario());
                    } else if (j == 3) {
                        cell.setCellValue(listadoRecorrer.get(i).getSubTotal());
                    }
                }
            }

            String rutaNueva = "C:/Users/" + nombreUsuario + "/Desktop/PEDIDOS/" + nuevaCarpeta + "/ID PEDIDO -" + idPedido + ".xls";
            FileOutputStream fileOut = new FileOutputStream(rutaNueva);
            wb.write(fileOut);
            fileOut.flush();
            fileOut.close();
            JOptionPane.showMessageDialog(null, "Exportado correctamente \n"+rutaNueva);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (this.txt_nombrePersonaSolicita.getText().isEmpty()) {
                throw new Exception("Para utilizar esta funcion ingrese al menos una letra");
            }

            String nombreBuscar = this.txt_nombrePersonaSolicita.getText().toUpperCase();
            this.eliminarContenidoTabla();
            this.cargarListadoPedidos(nombreBuscar);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(menuListarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(menuListarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(menuListarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(menuListarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new menuListarPedidos().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablaPedidos;
    private javax.swing.JTextField txt_nombrePersonaSolicita;
    // End of variables declaration//GEN-END:variables
}
